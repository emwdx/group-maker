{"ast":null,"code":"import _toConsumableArray from\"/Users/weinbergmath/CreativeLocal/reactProjects/group-maker/group-maker-23/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/weinbergmath/CreativeLocal/reactProjects/group-maker/group-maker-23/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import\"./App.css\";// Import your styles\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),rawData=_useState2[0],setRawData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),students=_useState4[0],setStudents=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),minGroupSize=_useState6[0],setMinGroupSize=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),maxGroupSize=_useState8[0],setMaxGroupSize=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),groups=_useState10[0],setGroups=_useState10[1];function handlePaste(e){setRawData(e.target.value);}function shuffleArray(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var _ref=[array[j],array[i]];array[i]=_ref[0];array[j]=_ref[1];}}function parseAndDisplayStudents(){var rows=rawData.split(\"\\n\");var studentsArr=rows.map(function(row){var cells=row.split(\"\\t\");return{name:cells[0],pronoun:cells[1],grade:cells[2]};});setStudents(studentsArr);shuffleArray(studentsArr);generateGroups(studentsArr);}function generateGroups(){if(students.length===0){return;}var groupArr=[];var remainingStudents=_toConsumableArray(students);var totalGroups=Math.ceil(remainingStudents.length/maxGroupSize);for(var i=0;i<totalGroups;i++){var groupSize=Math.min(Math.floor(Math.random()*(maxGroupSize-minGroupSize+1)+minGroupSize),remainingStudents.length);var group=remainingStudents.splice(0,groupSize);if(group.length>0){groupArr.push(group);}}setGroups(groupArr);}return/*#__PURE__*/_jsxs(\"div\",{className:\"App container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Group Generator\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",onChange:handlePaste,placeholder:\"Paste cells from Google Sheet here...\",rows:\"5\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mt-3\",onClick:parseAndDisplayStudents,children:\"Display Students\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Min group size:\",/*#__PURE__*/_jsx(\"input\",{className:\"ml-2\",type:\"number\",value:minGroupSize,onChange:function onChange(e){return setMinGroupSize(Number(e.target.value));}})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"ml-3\",children:[\"Max group size:\",/*#__PURE__*/_jsx(\"input\",{className:\"ml-2\",type:\"number\",value:maxGroupSize,onChange:function onChange(e){return setMaxGroupSize(Number(e.target.value));}})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success mt-3\",onClick:generateGroups,children:\"Generate Groups\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"groups mt-3\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Groups\"}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:groups.map(function(group,index){return/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[\"Group Number \",index+1]}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-group list-group-flush\",children:group.map(function(student,index){return/*#__PURE__*/_jsx(\"li\",{className:\"list-group-item\",children:student.name},\"\".concat(index,\"-\").concat(student.name));})})]})},index);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"students\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Students\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Grade\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Pronoun\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:students.map(function(student){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:student.name}),/*#__PURE__*/_jsx(\"td\",{children:student.grade}),/*#__PURE__*/_jsx(\"td\",{children:student.pronoun})]},student.name);})})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","rawData","setRawData","_useState3","_useState4","students","setStudents","_useState5","_useState6","minGroupSize","setMinGroupSize","_useState7","_useState8","maxGroupSize","setMaxGroupSize","_useState9","_useState10","groups","setGroups","handlePaste","e","target","value","shuffleArray","array","i","length","j","Math","floor","random","_ref","parseAndDisplayStudents","rows","split","studentsArr","map","row","cells","name","pronoun","grade","generateGroups","groupArr","remainingStudents","_toConsumableArray","totalGroups","ceil","groupSize","min","group","splice","push","className","children","onChange","placeholder","onClick","type","Number","index","student","concat"],"sources":["/Users/weinbergmath/CreativeLocal/reactProjects/group-maker/group-maker-23/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; // Import your styles\n\nfunction App() {\n  const [rawData, setRawData] = useState(\"\");\n  const [students, setStudents] = useState([]);\n  const [minGroupSize, setMinGroupSize] = useState(0);\n  const [maxGroupSize, setMaxGroupSize] = useState(0);\n  const [groups, setGroups] = useState([]);\n\n  function handlePaste(e) {\n    setRawData(e.target.value);\n  }\n\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  function parseAndDisplayStudents() {\n    const rows = rawData.split(\"\\n\");\n    const studentsArr = rows.map((row) => {\n      const cells = row.split(\"\\t\");\n      return {\n        name: cells[0],\n        pronoun: cells[1],\n        grade: cells[2],\n      };\n    });\n    setStudents(studentsArr);\n    shuffleArray(studentsArr);\n    generateGroups(studentsArr);\n  }\n\n  function generateGroups() {\n    if (students.length === 0) {\n      return;\n    }\n\n    const groupArr = [];\n    const remainingStudents = [...students];\n    const totalGroups = Math.ceil(remainingStudents.length / maxGroupSize);\n\n    for (let i = 0; i < totalGroups; i++) {\n      const groupSize = Math.min(\n        Math.floor(Math.random() * (maxGroupSize - minGroupSize + 1) + minGroupSize),\n        remainingStudents.length\n      );\n      const group = remainingStudents.splice(0, groupSize);\n      if (group.length > 0) {\n        groupArr.push(group);\n      }\n    }\n\n    setGroups(groupArr);\n  }\n\n  return (\n    <div className=\"App container\">\n      <h1>Group Generator</h1>\n      <textarea\n        className=\"form-control\"\n        onChange={handlePaste}\n        placeholder=\"Paste cells from Google Sheet here...\"\n        rows=\"5\"\n      />\n      <button className=\"btn btn-primary mt-3\" onClick={parseAndDisplayStudents}>\n        Display Students\n      </button>\n      <div className=\"mt-3\">\n        <label>\n          Min group size:\n          <input\n            className=\"ml-2\"\n            type=\"number\"\n            value={minGroupSize}\n            onChange={(e) => setMinGroupSize(Number(e.target.value))}\n          />\n        </label>\n        <label className=\"ml-3\">\n          Max group size:\n          <input\n            className=\"ml-2\"\n            type=\"number\"\n            value={maxGroupSize}\n            onChange={(e) => setMaxGroupSize(Number(e.target.value))}\n          />\n        </label>\n      </div>\n      <button className=\"btn btn-success mt-3\" onClick={generateGroups}>\n        Generate Groups\n      </button>\n      <div className=\"groups mt-3\">\n        <h2>Groups</h2>\n        <div className=\"row\">\n          {groups.map((group, index) => (\n            <div className=\"col-md-4 mb-3\" key={index}>\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  Group Number {index + 1}\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                  {group.map((student, index) => (\n                    <li key={`${index}-${student.name}`} className=\"list-group-item\">\n                      {student.name}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"students\">\n        <h2>Students</h2>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Grade</th>\n              <th>Pronoun</th>\n            </tr>\n          </thead>\n          <tbody>\n            {students.map(student => (\n              <tr key={student.name}>\n                <td>{student.name}</td>\n                <td>{student.grade}</td>\n                <td>{student.pronoun}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}